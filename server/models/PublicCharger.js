const mongoose = require('mongoose');

const publicChargerSchema = new mongoose.Schema({
  DataProvider: {
    WebsiteURL: String,
    Comments: String,
    DataProviderStatusType: {
      IsProviderEnabled: Boolean,
      ID: Number,
      Title: String,
    },
    IsRestrictedEdit: Boolean,
    IsOpenDataLicensed: Boolean,
    IsApprovedImport: Boolean,
    License: String,
    DateLastImported: Date,
    ID: Number,
    Title: String,
  },
  OperatorInfo: {
    WebsiteURL: String,
    Comments: String,
    PhonePrimaryContact: String,
    PhoneSecondaryContact: String,
    IsPrivateIndividual: Boolean,
    AddressInfo: String,
    BookingURL: String,
    ContactEmail: String,
    FaultReportEmail: String,
    IsRestrictedEdit: Boolean,
    ID: Number,
    Title: String,
  },
  UsageType: {
    IsPayAtLocation: Boolean,
    IsMembershipRequired: Boolean,
    IsAccessKeyRequired: Boolean,
    ID: Number,
    Title: String,
  },
  StatusType: {
    IsOperational: Boolean,
    IsUserSelectable: Boolean,
    ID: Number,
    Title: String,
  },
  SubmissionStatus: {
    IsLive: Boolean,
    ID: Number,
    Title: String,
  },
  UserComments: String,
  PercentageSimilarity: Number,
  MediaItems: [String],
  IsRecentlyVerified: Boolean,
  DateLastVerified: Date,
  ID: Number,
  UUID: String,
  ParentChargePointID: Number,
  DataProviderID: Number,
  DataProvidersReference: String,
  OperatorID: Number,
  OperatorsReference: String,
  UsageTypeID: Number,
  UsageCost: String,
  AddressInfo: {
    ID: Number,
    Title: String,
    AddressLine1: String,
    AddressLine2: String,
    Town: String,
    StateOrProvince: String,
    Postcode: String,
    CountryID: Number,
    Country: {
      ISOCode: String,
      ContinentCode: String,
      ID: Number,
      Title: String,
    },
    Latitude: Number,
    Longitude: Number,
    ContactTelephone1: String,
    ContactTelephone2: String,
    ContactEmail: String,
    AccessComments: String,
    RelatedURL: String,
    Distance: Number,
    DistanceUnit: Number,
  },
  Connections: [
    {
      ID: Number,
      ConnectionTypeID: Number,
      ConnectionType: {
        FormalName: String,
        IsDiscontinued: Boolean,
        IsObsolete: Boolean,
        ID: Number,
        Title: String,
      },
      Reference: String,
      StatusTypeID: Number,
      StatusType: {
        IsOperational: Boolean,
        IsUserSelectable: Boolean,
        ID: Number,
        Title: String,
      },
      LevelID: Number,
      Level: {
        Comments: String,
        IsFastChargeCapable: Boolean,
        ID: Number,
        Title: String,
      },
      Amps: Number,
      Voltage: Number,
      PowerKW: Number,
      CurrentTypeID: Number,
      CurrentType: {
        Description: String,
        ID: Number,
        Title: String,
      },
      Quantity: Number,
      Comments: String,
    },
  ],
  NumberOfPoints: Number,
  GeneralComments: String,
  DatePlanned: Date,
  DateLastConfirmed: Date,
  StatusTypeID: Number,
  DateLastStatusUpdate: Date,
  MetadataValues: [String],
  DataQualityLevel: Number,
  DateCreated: Date,
  SubmissionStatusTypeID: Number,
}, { collection: 'chargestations' });

const PublicCharger = mongoose.model('PublicCharger', publicChargerSchema);

module.exports = PublicCharger;
